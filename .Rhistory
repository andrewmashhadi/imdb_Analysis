xmlChildren(xxa)
xmlChildren(xxa)
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]")
xmlChildren(xxa)
getValue
xmlValue(xxa, "span")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div[1]")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div[1]/div[2]")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div/div[2]")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div/div")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div/")
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
# /html/body/div[3]/div/div[2]/div[3]/div[1]/div/div[1]/div[2]/span[1]
xxa <- getNodeSet(this_parsed_page, "/html/body/div[3]/div")
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=2))
colnames(more_movies)<-c("Name","ID")
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
iURL <- 1
i <-1
for (genre in genres) {
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
cat("Movie ID found: ", mname, "\n")
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(xmlSApply(xxa, xmlGetAttr, "href"), 8, 16)
}
}
}
L <- list()
L["asd"]
L["asd"] <-
as
L["asd"] <- 123
L
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=2))
colnames(more_movies)<-c("Name","ID")
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(mid, 8, 16)
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
move_on <- FALSE
break
}
}
movies_by_genre[genre] <- more_movies
}
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=2))
colnames(more_movies)<-c("Name","ID")
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(m_id, 8, 16)
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
move_on <- FALSE
break
}
}
movies_by_genre[genre] <- more_movies
}
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=2))
colnames(more_movies)<-c("Name","ID")
move_on <- FALSE
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(m_id, 8, 16)
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
break
}
}
movies_by_genre[genre] <- more_movies
}
View(movies_by_genre)
View(more_movies)
View(movies_by_genre)
movies_by_genre[["Action"]]
View(movies_by_genre)
movies_by_genre
movies_by_genre[["action"]]
movies_by_genre[["Action"]]
movies_by_genre[["Action"]]$ID
View(more_movies)
View(more_movies)
more_movies[292:1000, ] <-NULL
more_movies <- more_movies[-292:1000, ]
more_movies <- more_movies[-292:1000, , drop =F]
more_movies <- more_movies[-1000, ]
200:1000
more_movies <- more_movies[-(200:1000), ]
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=2))
colnames(more_movies)<-c("Name","ID", "Genre")
move_on <- FALSE
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(m_id, 8, 16)
more_movies$ID[[(iURL-1)*numMoviesPerURL + i]] <- genre
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
more_movies <- more_movies[-(((iURL-1)*numMoviesPerURL+i+1):1000), ]
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
break
}
}
movies_by_genre[[genre]] <- more_movies
}
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=3))
colnames(more_movies)<-c("Name","ID", "Genre")
move_on <- FALSE
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(m_id, 8, 16)
more_movies$ID[[(iURL-1)*numMoviesPerURL + i]] <- genre
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
more_movies <- more_movies[-(((iURL-1)*numMoviesPerURL+i+1):1000), ]
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
break
}
}
movies_by_genre[[genre]] <- more_movies
}
View(more_movies)
library(rjson)
library(XML)
library(xtable)
library(tools)
numURLS <- 20
numMoviesPerURL <- 50
genres <- c("Action",
"Adventure",
"Animation",
"Biography",
"Comedy",
"Crime",
"Drama",
"Family",
"Fantasy",
"Film-Noir",
"History",
"Horror",
"Music",
"Musical",
"Mystery",
"Romance",
"Sci-Fi",
"Sport",
"Thriller",
"War",
"Western")
movies_by_genre <- list()
for (genre in genres) {
more_movies <- as.data.frame(matrix(nrow=numURLS*numMoviesPerURL, ncol=3))
colnames(more_movies)<-c("Name","ID", "Genre")
move_on <- FALSE
for (iURL in 1:20) {
URL <- paste0("https://www.imdb.com/search/title/?title_type=feature&num_votes=25000,",
"&genres=",
genre,
"&start=",
(iURL-1)*numMoviesPerURL + 1)
cat("Collecting at:", URL, "\n")
xxhtml <-
readLines(URL)
this_parsed_page <- htmlParse(xxhtml)
for (i in 1:50){
xpath <- paste0("/html/body/div[2]/div/div[2]/div/div[1]/div/div[3]/div/div[", i, "]/div[3]/h3/a")
xxa <- getNodeSet(this_parsed_page, xpath)
mname <- xmlValue(xxa, "a")
m_id <- try(xmlSApply(xxa, xmlGetAttr, "href"), silent = TRUE)
more_movies$Name[(iURL-1)*numMoviesPerURL + i] <- mname
more_movies$ID[(iURL-1)*numMoviesPerURL + i] <- substr(m_id, 8, 16)
more_movies$Genre[[(iURL-1)*numMoviesPerURL + i]] <- genre
if( "try-error" %in% class(m_id) ) {
cat("Filled max movies in: ", genre, " genre")
more_movies <- more_movies[-(((iURL-1)*numMoviesPerURL+i+1):1000), ]
move_on <- TRUE
break
} else {
cat("Movie ID found: ", mname, "\n")
}
}
if (move_on){
break
}
}
movies_by_genre[[genre]] <- more_movies
}
View(movies_by_genre)
movie_data <- toJSON(movies_by_genre)
writeLines(movie_data, file.path("imdb_data", "movies_by_genre", "xxout_studentNames.json"))
movie_data <- toJSON(movies_by_genre)
writeLines(movie_data, file.path("imdb_data", "movies_by_genre", "xxout_studentNames.json"))
t <- fromJSON(readLines(file.path("imdb_data", "movies_by_genre", "movies_by_genre.json")))
t
View(t)
t <- fromJSON(readLines(file.path("imdb_data", "movies_by_genre", "movies_by_genre.json")))
library(rjson)
t <- fromJSON(readLines(file.path("imdb_data", "movies_by_genre", "movies_by_genre.json")))
View(t)
action <-t[["Action"]]
action$ID[1]
action[, 1:3]
action[1, 1:3]
action[1, ]
View(action)
action <-as.data.frame(t[["Action"]])
action[1, ]
